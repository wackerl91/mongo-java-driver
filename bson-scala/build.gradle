/*
 * Copyright 2008-present MongoDB, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

description = "A Scala wrapper / extension to the bson library"
archivesBaseName = 'mongo-scala-bson'

apply plugin: "scala"
apply plugin: "com.adtran.scala-multiversion-plugin"
apply plugin: "com.github.maiflai.scalatest"

dependencies {
    compile project(':bson')
    compile ('org.scala-lang:scala-library:%scala-version%')
    compile ('org.scala-lang:scala-reflect:%scala-version%')

    testCompile project(':bson').sourceSets.test.output

    testRuntime 'org.pegdown:pegdown:1.6.0'
    testCompile('org.scalatest:scalatest_%%:3.0.8')
    testCompile('org.scalamock:scalamock_%%:4.4.0')
    testCompile('ch.qos.logback:logback-classic:1.1.3')
    testCompile('org.reflections:reflections:0.9.10')
    testCompile('javax.servlet:servlet-api:2.5')
}

sourceSets {
    main {
        scala {
            if(scalaVersion.startsWith("2.13")) {
                srcDirs += ["src/main/scala-2.13+"]
            } else {
                srcDirs += ["src/main/scala-2.13-"]
            }
        }
    }
}

tasks.withType(Test) {
    doFirst {
        println("Running Test task using scala version: $scalaVersion")
    }
}

ext {
    pomName = 'Mongo Scala Bson Library'
}

test {
    maxParallelForks = 1
}

jar {
    manifest {
        instruction 'Automatic-Module-Name', 'org.mongodb.scala.mongo-scala-bson'
        instruction 'Build-Version', project.gitVersion
        instruction 'Import-Package',
                'org.bson.*'
    }
}
